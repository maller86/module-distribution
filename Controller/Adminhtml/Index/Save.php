<?php
/**
 * NOTICE OF LICENSE
 *
 * This source file is subject to the license that is available in LICENSE file.
 *
 * DISCLAIMER
 *
 * Do not edit this file if you wish to upgrade this extension to newer version in the future.
 */

namespace FjodorMaller\Distribution\Controller\Adminhtml\Index;

use FjodorMaller\Distribution\Api\Data\DistributionInterface;
use Magento\Backend\Model\View\Result\Redirect;
use Magento\Framework\Exception\LocalizedException;

/**
 * Class Save
 */
class Save extends Base
{
    /**
     * @inheritdoc
     */
    public function execute()
    {
        $data = $this->getRequest()->getPostValue();
        /* @var $resultRedirect Redirect */
        $resultRedirect = $this->resultRedirectFactory->create();
        if ($data) {
            $data  = $this->_dataProcessor->filter($data);
            $model = $this->_factory->create();
            $id    = $this->getRequest()->getParam(DistributionInterface::DISTRIBUTION_ID);
            if ($id) {
                try {
                    $model = $this->_repository->getById($id);
                } catch (LocalizedException $e) {
                    $this->messageManager->addErrorMessage(__('This distribution no longer exists.'));

                    return $resultRedirect->setPath('*/*/');
                }
            }
            $model->setData($data);
            $this->_eventManager->dispatch(
                'distribution_prepare_save',
                [
                    DistributionInterface::PARAM_NAME => $model,
                    'request'                         => $this->getRequest(),
                ]
            );
            $data = $model->getData();
            if (!$this->_dataProcessor->validate($data)) {
                return $resultRedirect->setPath('*/*/edit', [
                    DistributionInterface::DISTRIBUTION_ID => $model->getId(),
                    '_current'                             => true,
                ]);
            }
            try {
                $this->_repository->save($model);
                $this->messageManager->addSuccessMessage(__('You saved the distribution.'));
                $this->_dataPersistor->clear('current_distribution');
                if ($this->getRequest()->getParam('back')) {
                    return $resultRedirect->setPath('*/*/edit', [
                        DistributionInterface::DISTRIBUTION_ID => $model->getId(),
                        '_current'                             => true,
                    ]);
                }

                return $resultRedirect->setPath('*/*/');
            } catch (LocalizedException $e) {
                $this->messageManager->addExceptionMessage($e->getPrevious() ?: $e);
            } catch (\Exception $e) {
                $this->messageManager->addExceptionMessage(
                    $e,
                    __('Something went wrong while saving the distribution.')
                );
            }
        }

        return $resultRedirect->setPath('*/*/');
    }
}
