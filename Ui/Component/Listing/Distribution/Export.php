<?php
/**
 * NOTICE OF LICENSE
 *
 * This source file is subject to the license that is available in LICENSE file.
 *
 * DISCLAIMER
 *
 * Do not edit this file if you wish to upgrade this extension to newer version in the future.
 */

namespace FjodorMaller\Distribution\Ui\Component\Listing\Distribution;

use FjodorMaller\Distribution\Helper\Data as DistributionHelper;
use Magento\Framework\View\Element\UiComponent\ContextInterface;
use Magento\Framework\UrlInterface;
use Magento\Ui\Component\ExportButton as OriginalExportButton;

/**
 * Class Export
 */
class Export extends OriginalExportButton
{
    /**
     * @var DistributionHelper
     */
    protected $_distributionHelper;

    /**
     * @param DistributionHelper $distributionHelper
     *
     * @inheritdoc
     */
    public function __construct(
        DistributionHelper $distributionHelper,
        ContextInterface $context,
        UrlInterface $urlBuilder,
        array $components = [],
        array $data = []
    ) {
        $this->_distributionHelper = $distributionHelper;
        parent::__construct($context, $urlBuilder, $components, $data);
    }

    /**
     * @inheritdoc
     */
    public function prepare()
    {
        $config  = $this->getData('config');
        $options = []; //$config[ 'options' ] ?? [];
        if (true /*$this->_distributionHelper->isCsvExportEnabled()*/) {
            $options[ 'csv' ] = [
                'value' => 'csv',
                'label' => (string)__('CSV'),
                'url'   => 'mui/export/gridToCsv',
            ];
        } elseif (isset($options[ 'csv' ])) {
            unset($options[ 'csv' ]);
        }
        /*if ($this->_distributionHelper->isXmlExportEnabled()) {
            $options[ 'xml' ] = [
                'value' => 'xml',
                'label' => (string) __('XML'),
                'url'   => 'mui/export/gridToXml',
            ];
        } else if (isset($options[ 'xml' ])) {
            unset($options[ 'xml' ]);
        }*/
        if (true /*$this->_distributionHelper->isExcelExportEnabled()*/) {
            $options[ 'excel' ] = [
                'value' => 'excel',
                'label' => (string)__('Excel XML'),
                'url'   => 'mui/export/gridToXml',
            ];
        } elseif (isset($options[ 'excel' ])) {
            unset($options[ 'excel' ]);
        }
        if (!empty($options)) {
            $config[ 'options' ] = $options;
            $this->setData('config', $config);
        }
        parent::prepare();
    }
}
