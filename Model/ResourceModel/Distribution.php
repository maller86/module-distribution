<?php
/**
 * NOTICE OF LICENSE
 *
 * This source file is subject to the license that is available in LICENSE file.
 *
 * DISCLAIMER
 *
 * Do not edit this file if you wish to upgrade this extension to newer version in the future.
 */

namespace FjodorMaller\Distribution\Model\ResourceModel;

use FjodorMaller\Distribution\Api\Data\DistributionInterface;
use Magento\Framework\Model\AbstractModel;
use Magento\Framework\Model\ResourceModel\Db\AbstractDb;
use Magento\Framework\Model\ResourceModel\Db\Context;
use Magento\Framework\Stdlib\DateTime;

/**
 * Class Distribution
 */
class Distribution extends AbstractDb
{
    /**
     * @inheritdoc
     */
    protected $_serializableFields = [
        DistributionInterface::OPTIONS => [
            null,
            [],
            true,
        ],
    ];

    /**
     * @var DateTime
     */
    protected $_dateTime;

    /**
     * @param DateTime $dateTime
     *
     * @inheritdoc
     */
    public function __construct(
        Context $context,
        DateTime $dateTime,
        ?string $connectionName = null
    ) {
        $this->_dateTime = $dateTime;
        parent::__construct($context, $connectionName);
    }

    /**
     * @inheritdoc
     */
    protected function _construct()
    {
        $this->_init($this->getTable('fm_distribution'), DistributionInterface::DISTRIBUTION_ID);
    }

    /**
     * @inheritdoc
     */
    protected function _beforeSave(AbstractModel $object)
    {
        /* @var $object DistributionInterface */
        $dateFields = [DistributionInterface::LAST_CHECK];
        foreach ($dateFields as $field) {
            $value = !$object->getData($field) ? null : $this->_dateTime->formatDate($object->getData($field));
            $object->setData($field, $value);
        }

        return parent::_beforeSave($object);
    }
}
