<?php
/**
 * NOTICE OF LICENSE
 *
 * This source file is subject to the license that is available in LICENSE file.
 *
 * DISCLAIMER
 *
 * Do not edit this file if you wish to upgrade this extension to newer version in the future.
 */

namespace FjodorMaller\Distribution\Model\Distribution;

use FjodorMaller\Base\Model\BasePool;
use FjodorMaller\Distribution\Api\Data\Distribution\AdapterPoolInterface;
use FjodorMaller\Distribution\Api\Data\Distribution\OptionAdapterInterface;

/**
 * Class AdapterPool
 */
class AdapterPool extends BasePool implements AdapterPoolInterface
{
    const POOL_PARAM = 'adapters';

    /**
     * Callback for sorting objects.
     *
     * @param OptionAdapterInterface $a
     * @param OptionAdapterInterface $b
     *
     * @return int
     */
    protected function sortObjects(OptionAdapterInterface $a, OptionAdapterInterface $b)
    {
        return strcmp($a->getName(), $b->getName());
    }

    /**
     * @inheritdoc
     */
    public function getAdapters()
    {
        return $this->getObjects();
    }

    /**
     * @inheritdoc
     */
    public function getAdapter($name)
    {
        return $this->getObject($name, false);
    }

    /**
     * @inheritdoc
     */
    public function hasAdapters()
    {
        return $this->hasObjects();
    }

    /**
     * @inheritdoc
     */
    public function hasAdapter($name)
    {
        return $this->hasObject($name);
    }

    /**
     * @inheritdoc
     */
    public function addAdapter($name, OptionAdapterInterface $adapter)
    {
        return $this->addObject($name, $adapter);
    }

    /**
     * @inheritdoc
     */
    public function addAdapters(array $adapters)
    {
        return $this->addObjects($adapters);
    }
}
