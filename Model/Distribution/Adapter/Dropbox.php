<?php
/**
 * NOTICE OF LICENSE
 *
 * This source file is subject to the license that is available in LICENSE file.
 *
 * DISCLAIMER
 *
 * Do not edit this file if you wish to upgrade this extension to newer version in the future.
 */

namespace FjodorMaller\Distribution\Model\Distribution\Adapter;

use League\Flysystem\FilesystemFactory;
use Spatie\Dropbox\ClientFactory;
use Spatie\FlysystemDropbox\DropboxAdapterFactory;

/**
 * Class Dropbox
 */
class Dropbox extends BaseAdapter
{
    /**
     * @var ClientFactory
     */
    protected $_clientFactory;

    /**
     * @var FilesystemFactory
     */
    protected $_filesystemFactory;

    /**
     * @var DropboxAdapterFactory
     */
    protected $_dropboxAdapterFactory;

    /**
     * @param ClientFactory         $clientFactory
     * @param FilesystemFactory     $filesystemFactory
     * @param DropboxAdapterFactory $dropboxAdapterFactory
     *
     * @inheritdoc
     */
    public function __construct(
        ClientFactory $clientFactory,
        FilesystemFactory $filesystemFactory,
        DropboxAdapterFactory $dropboxAdapterFactory,
        array $data = []
    ) {
        parent::__construct($data);
        $this->_clientFactory         = $clientFactory;
        $this->_filesystemFactory     = $filesystemFactory;
        $this->_dropboxAdapterFactory = $dropboxAdapterFactory;
    }

    /**
     * @inheritdoc
     */
    public function getFormFields()
    {
        return [
            'field_authorization_token' => [
                'name'   => 'authorization_token',
                'config' => [
                    'label'          => __('Authorization Token'),
                    'value'          => '',
                    'formElement'    => 'input',
                    'additionalInfo' => sprintf(
                        __('Get your authorization token from the <a href="%s" target="_blank">Dropbox Console</a>.'),
                        'https://www.dropbox.com/developers/apps'
                    ),
                    'validation'     => [
                        'required-entry' => true,
                    ],
                ],
            ],
            'field_prefix'              => [
                'name'   => 'prefix',
                'config' => [
                    'label'       => __('Path'),
                    'value'       => '',
                    'formElement' => 'input',
                ],
            ],
        ];
    }

    /**
     * @inheritdoc
     */
    public function createFilesystem(array $options = [])
    {
        $this->ensureRequiredOptions($options);
        $client     = $this->_clientFactory->create([
            'accessToken' => $options[ 'authorization_token' ],
        ]);
        $adapter    = $this->_dropboxAdapterFactory->create([
            'client' => $client,
            'prefix' => $options[ 'prefix' ],
        ]);
        $filesystem = $this->_filesystemFactory->create([
            'adapter' => $adapter,
        ]);

        return $filesystem;
    }
}
