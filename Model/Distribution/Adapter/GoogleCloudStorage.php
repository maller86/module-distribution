<?php
/**
 * NOTICE OF LICENSE
 *
 * This source file is subject to the license that is available in LICENSE file.
 *
 * DISCLAIMER
 *
 * Do not edit this file if you wish to upgrade this extension to newer version in the future.
 */

namespace FjodorMaller\Distribution\Model\Distribution\Adapter;

use Google\Cloud\Storage\StorageClientFactory;
use League\Flysystem\FilesystemFactory;
use Superbalist\Flysystem\GoogleStorage\GoogleStorageAdapterFactory;

/**
 * Class GoogleCloudStorage
 */
class GoogleCloudStorage extends BaseAdapter
{
    /**
     * @var FilesystemFactory
     */
    protected $_filesystemFactory;

    /**
     * @var StorageClientFactory
     */
    protected $_storageClientFactory;

    /**
     * @var GoogleStorageAdapterFactory
     */
    protected $_googleStorageAdapterFactory;

    /**
     * @param FilesystemFactory           $filesystemFactory
     * @param StorageClientFactory        $storageClientFactory
     * @param GoogleStorageAdapterFactory $googleStorageAdapterFactory
     *
     * @inheritdoc
     */
    public function __construct(
        FilesystemFactory $filesystemFactory,
        StorageClientFactory $storageClientFactory,
        GoogleStorageAdapterFactory $googleStorageAdapterFactory,
        array $data = []
    ) {
        parent::__construct($data);
        $this->_filesystemFactory           = $filesystemFactory;
        $this->_storageClientFactory        = $storageClientFactory;
        $this->_googleStorageAdapterFactory = $googleStorageAdapterFactory;
    }

    /**
     * @inheritdoc
     */
    public function getFormFields()
    {
        return [
            'field_project_id'    => [
                'name'   => 'project_id',
                'config' => [
                    'label'       => __('Project Id'),
                    'value'       => '',
                    'formElement' => 'input',
                    'validation'  => [
                        'required-entry' => true,
                    ],
                ],
            ],
            'field_bucket'        => [
                'name'   => 'bucket',
                'config' => [
                    'label'       => __('Bucket'),
                    'value'       => '',
                    'formElement' => 'input',
                    'validation'  => [
                        'required-entry' => true,
                    ],
                ],
            ],
            'field_key_file_path' => [
                'name'   => 'key_file_path',
                'config' => [
                    'label'       => __('Key-File Path'),
                    'value'       => '',
                    'formElement' => 'input',
                    'notice'      => 'Enter the path to the json-key file from system root.',
                    'validation'  => [
                        'required-entry' => true,
                    ],
                ],
            ],
            'field_prefix'        => [
                'name'   => 'prefix',
                'config' => [
                    'label'       => __('Path'),
                    'value'       => '/',
                    'formElement' => 'input',
                    'notice'      => 'Enter the path to set as root on Google Cloud Storage.',
                ],
            ],
        ];
    }

    /**
     * @inheritdoc
     */
    public function createFilesystem(array $options = [])
    {
        $this->ensureRequiredOptions($options);
        $client     = $this->_storageClientFactory->create([
            'projectId'   => $options[ 'project_id' ],
            'keyFilePath' => $options[ 'key_file_path' ],
        ]);
        $bucket     = $client->bucket($options[ 'bucket' ]);
        $adapter    = $this->_googleStorageAdapterFactory->create([
            'storageClient' => $client,
            'bucket'        => $bucket,
            'pathPrefix'    => $options[ 'prefix' ],
        ]);
        $filesystem = $this->_filesystemFactory->create([
            'adapter' => $adapter,
        ]);

        return $filesystem;
    }
}
