<?php
/**
 * NOTICE OF LICENSE
 *
 * This source file is subject to the license that is available in LICENSE file.
 *
 * DISCLAIMER
 *
 * Do not edit this file if you wish to upgrade this extension to newer version in the future.
 */

namespace FjodorMaller\Distribution\Model\System\Config\Source;

use FjodorMaller\Distribution\Api\Data\DistributionInterface;
use FjodorMaller\Distribution\Helper\Data;
use FjodorMaller\Distribution\Model\ResourceModel\Distribution\CollectionFactory;
use Magento\Framework\Option\ArrayInterface;

/**
 * Class Distribution
 */
class Distribution implements ArrayInterface
{
    /**
     * @var array
     */
    protected $_options;

    /**
     * @var CollectionFactory
     */
    protected $_collectionFactory;

    /**
     * @param CollectionFactory $collectionFactory
     */
    public function __construct(
        CollectionFactory $collectionFactory
    ) {
        $this->_collectionFactory = $collectionFactory;
    }

    /**
     * Returns the options as array.
     *
     * @return array
     */
    public function toArray()
    {
        if (!$this->_options) {
            $this->_options = [];
            $collection     = $this->_collectionFactory->create();
            /* @var $distribution DistributionInterface */
            foreach ($collection as $distribution) {
                $this->_options[] = sprintf(
                    '%s%s',
                    $distribution->getName(),
                    $distribution->getIsActive() ? '' : sprintf(' (%s)', __('Disabled'))
                );
            }
        }

        return $this->_options;
    }

    /**
     * @inheritdoc
     */
    public function toOptionArray()
    {
        return Data::toOptions($this->toArray());
    }
}
