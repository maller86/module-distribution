<?php
/**
 * NOTICE OF LICENSE
 *
 * This source file is subject to the license that is available in LICENSE file.
 *
 * DISCLAIMER
 *
 * Do not edit this file if you wish to upgrade this extension to newer version in the future.
 */

namespace FjodorMaller\Distribution\Model;

use FjodorMaller\Distribution\Api\Data\DistributionInterface;
use FjodorMaller\Distribution\Model\ResourceModel\Distribution as DistributionResource;
use Magento\Framework\Model\AbstractModel;

/**
 * Class Distribution
 */
class Distribution extends AbstractModel implements DistributionInterface
{
    /**
     * Distribution cache tag
     */
    const CACHE_TAG = 'fm_dist_dist';

    /**
     * @var string
     */
    protected $_cacheTag = self::CACHE_TAG;

    /**
     * @var string
     */
    protected $_eventPrefix = 'distribution_distribution';

    /**
     * @var string
     */
    protected $_eventObject = 'distribution';

    /**
     * @inheritdoc
     */
    protected function _construct()
    {
        $this->_init(DistributionResource::class);
    }

    /**
     * @inheritdoc
     */
    public function getId()
    {
        return $this->getData(self::DISTRIBUTION_ID);
    }

    /**
     * @inheritdoc
     */
    public function setStatus($status)
    {
        return $this->setData(self::STATUS, (int)$status);
    }

    /**
     * @inheritdoc
     */
    public function getStatus()
    {
        return (int)$this->getData(self::STATUS);
    }

    /**
     * @inheritdoc
     */
    public function setName($name)
    {
        return $this->setData(self::NAME, (string)$name);
    }

    /**
     * @inheritdoc
     */
    public function getName()
    {
        return (string)$this->getData(self::NAME);
    }

    /**
     * @inheritdoc
     */
    public function setAdapter($adapter)
    {
        return $this->setData(self::ADAPTER, (string)$adapter);
    }

    /**
     * @inheritdoc
     */
    public function getAdapter()
    {
        return (string)$this->getData(self::ADAPTER);
    }

    /**
     * @inheritdoc
     */
    public function setOptions(array $options)
    {
        return $this->setData(self::OPTIONS, $options);
    }

    /**
     * @inheritdoc
     */
    public function getOptions()
    {
        return (array)$this->getData(self::OPTIONS);
    }

    /**
     * @inheritdoc
     */
    public function setIsActive($bool)
    {
        return $this->setData(self::IS_ACTIVE, (bool)$bool);
    }

    /**
     * @inheritdoc
     */
    public function getIsActive()
    {
        return (bool)$this->getData(self::IS_ACTIVE);
    }

    /**
     * @inheritdoc
     */
    public function setHealth($health)
    {
        return $this->setData(self::HEALTH, (int)$health);
    }

    /**
     * @inheritdoc
     */
    public function getHealth()
    {
        return (int)$this->getData(self::HEALTH);
    }

    /**
     * @inheritdoc
     */
    public function setLastCheck($datetime)
    {
        return $this->setData(self::LAST_CHECK, $datetime);
    }

    /**
     * @inheritdoc
     */
    public function getLastCheck()
    {
        $result = $this->getData(self::LAST_CHECK);
        if ($result) {
            return $result;
        }

        return false;
    }

    /**
     * @inheritdoc
     */
    public function setLastAlive($datetime)
    {
        return $this->setData(self::LAST_ALIVE, (string)$datetime);
    }

    /**
     * @inheritdoc
     */
    public function getLastAlive()
    {
        $result = $this->getData(self::LAST_ALIVE);
        if ($result) {
            return $result;
        }

        return false;
    }
}
